#pragma checksum "C:\Users\Student\Documents\MSIT143.ClientMDA\ClientMDA\Views\Member\WatchList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c14d6e7556d2f087dd96f2ca53267307100992e2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Member_WatchList), @"mvc.1.0.view", @"/Views/Member/WatchList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Student\Documents\MSIT143.ClientMDA\ClientMDA\Views\_ViewImports.cshtml"
using ClientMDA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Student\Documents\MSIT143.ClientMDA\ClientMDA\Views\_ViewImports.cshtml"
using ClientMDA.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c14d6e7556d2f087dd96f2ca53267307100992e2", @"/Views/Member/WatchList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"771dfde91e9627c6175ce4a1776b9243c8ca42e1", @"/Views/_ViewImports.cshtml")]
    public class Views_Member_WatchList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Member/WatchList.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Member/MemberMain.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Member/modal.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/comment/電影評論"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("white"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Student\Documents\MSIT143.ClientMDA\ClientMDA\Views\Member\WatchList.cshtml"
  
    ViewData["Title"] = "WatchList";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c14d6e7556d2f087dd96f2ca53267307100992e25778", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c14d6e7556d2f087dd96f2ca53267307100992e26040", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c14d6e7556d2f087dd96f2ca53267307100992e27218", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"" integrity=""sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer"" />

    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c14d6e7556d2f087dd96f2ca53267307100992e28680", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <style>
        .content {
            width: 80%;
            margin: 0 auto;
        }

        .member_area {
            color: white;
        }

        .white {
            color: white;
            text-align: center
        }

        .btn-cancel {
            background-color: #6c757d;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c14d6e7556d2f087dd96f2ca53267307100992e210907", async() => {
                WriteLiteral(@"
    <div class=""member_id"">
        <span class=""member_hello"">HELLO!</span>
        <span class=""member_id_name""></span>
    </div>
    <div class=""row"">
        <div class=""member_menu"">
            <a id=""watchlist"" href=""../Member/WatchList"" title=""我的片單"" class=""member_link"">我的片單</a>
            <a id=""commentList"" href=""../Member/CommentList"" title=""我的評論"" class=""member_link"">我的評論</a>
");
                WriteLiteral(@"
            <a id=""orderlist"" href=""../Member/orderlist"" title=""訂單查詢"" class=""member_link"">訂單查詢</a>
            <a id=""memberbonuslist"" href=""../Member/memberbonuslist"" title=""我的紅利金"" class=""member_link"">我的紅利金</a>
            <a id=""memberdiscount"" href=""../Member/memberdiscount"" title=""我的抵用券"" class=""member_link"">我的抵用券</a>

            <a id=""memberpassword"" href=""../Member/PasswordEdit"" title=""密碼修改"" class=""member_link"">密碼修改</a>
            <a id=""MemberEdit"" href=""../Member/MemberEdit"" title=""資料修改"" class=""member_link "">資料修改</a>
            <a href=""../Member/logout"" class=""member_link"" title=""登出"">登出</a>
        </div>
        <div class=""member_main"" style=""color:white"">
            <div class=""member_area "">
                <!--content-->
                <h2>
                    我的片單
                    <button id=""buttonAdd"" class=""btn btn-link add"" data-modal-target=""#modal"">
                        <i class=""fas fa-plus-square""></i>
                    </button>
                </h2>
   ");
                WriteLiteral(@"             <div class=""content"">
                    <div class=""card-title"">
                        <p>
                            MyWatchList-哈利波特
                            <button id=""buttonEdit"" class=""btn btn-link btn-sm edit"" data-modal-target=""#editModal"">
                                <i class=""fa fa-pencil-square-o""></i>
                            </button>
                        </p>
                    </div>
                    <div class=""swiper-container"">
                        <div class=""swiper-wrapper"">

                            <div class=""swiper-slide""");
                BeginWriteAttribute("style", "\r\n                                 style=\"", 3028, "\"", 3234, 3);
                WriteAttributeValue("", 3070, "background-image:", 3070, 17, true);
                WriteAttributeValue(" ", 3087, "url(\'https://m.media-amazon.com/images/M/MV5BMzkyZGFlOWQtZjFlMi00N2YwLWE2OWQtYTgxY2NkNmM1NjMwXkEyXkFqcGdeQXVyNjY1NTM1MzA", 3088, 121, true);
                WriteLiteral("@");
                WriteAttributeValue("", 3210, "._V1_FMjpg_UX1000_.jpg\')", 3210, 24, true);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">哈利波特：神秘的魔法石</p>
                                </a>
                            </div>
                            <div class=""swiper-slide""
                                 style=""background-image: url('https://m.media-amazon.com/images/M/MV5BMjE0YjUzNDUtMjc5OS00MTU3LTgxMmUtODhkOThkMzdjNWI4XkEyXkFqcGdeQXVyMTA3MzQ4MTc0._V1_FMjpg_UX834_.jpg')"">
");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">哈利波特：消失的密室</p>
                                </a>
                            </div>
                            <div class=""swiper-slide""
                                 style=""background-image: url('https://www.miranewcinemas.com/miramarimaxauro/imax/images/upload/movie/201312121120071.jpg') "">
");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">哈利波特：火盃的考驗</p>
                                </a>
                            </div>
                            <div class=""swiper-slide""
                                 style=""background-image: url('https://m.media-amazon.com/images/M/MV5BMTM0NTczMTUzOV5BMl5BanBnXkFtZTYwMzIxNTg3._V1_FMjpg_UX450_.jpg')"">
");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">哈利波特：鳳凰會的密令</p>
                                </a>
                            </div>
                            <div class=""swiper-slide""");
                BeginWriteAttribute("style", "\r\n                                 style=\"", 6031, "\"", 6224, 3);
                WriteAttributeValue("", 6073, "background-image:", 6073, 17, true);
                WriteAttributeValue(" ", 6090, "url(\'https://m.media-amazon.com/images/M/MV5BMGVmMWNiMDktYjQ0Mi00MWIxLTk0N2UtN2ZlYTdkN2IzNDNlXkEyXkFqcGdeQXVyODE5NzE3OTE", 6091, 121, true);
                WriteLiteral("@");
                WriteAttributeValue("", 6213, "._V1_.jpg\')", 6213, 11, true);
                EndWriteAttribute();
                WriteLiteral(">\r\n");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">哈利波特：死神的聖物2</p>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div style=""clear:both;""></div>

                    <div class=""card-title"">
                        <p>
                            周末片單
                            <button id=""buttonEdit"" class=""btn btn-link btn-sm edit"" data-modal-target=""#editModal"">
                                <i class=""fa fa-pencil-square-o""></i>
                            </button>
                        </p>
                    </div>
                    <div class=""swiper-container"">
                        <div class=""swiper-wrapper"">

                            <div class=""swiper-slide""
                                 style=""background-image: url('https://www.sonypictures.com/sites/default/files/styles/max_560x840/public/title-key-");
                WriteLiteral("art/bullettrain_onesheet_1400x2100_v4.jpg?itok=khOUNLFM\') \">\r\n");
                WriteLiteral("                                <a href=\"/vod/3795\">\r\n                                    <p class=\"movie-card\">子彈列車</p>\r\n                                </a>\r\n                            </div>\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c14d6e7556d2f087dd96f2ca53267307100992e217749", async() => {
                    WriteLiteral("\r\n                                <div class=\"swiper-slide\"");
                    BeginWriteAttribute("style", "\r\n                                     style=\"", 8236, "\"", 8434, 4);
                    WriteAttributeValue("", 8282, "background-image:", 8282, 17, true);
                    WriteAttributeValue(" ", 8299, "url(\'https://m.media-amazon.com/images/M/MV5BZWYzOGEwNTgtNWU3NS00ZTQ0LWJkODUtMmVhMjIwMjA1ZmQwXkEyXkFqcGdeQXVyMjkwOTAyMDU", 8300, 121, true);
                    WriteLiteral("@");
                    WriteAttributeValue("", 8422, "._V1_.jpg\')", 8422, 11, true);
                    WriteAttributeValue(" ", 8433, "", 8434, 1, true);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n");
                    WriteLiteral("\r\n                                    <p class=\"movie-card\">捍衛戰士：獨行俠</p>\r\n\r\n                                </div>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </div>
                    </div>
                    <div style=""clear:both;""></div>

                    <div class=""card-title"">
                        <p>
                            魔戒
                            <button id=""buttonEdit"" class=""btn btn-link btn-sm edit"" data-modal-target=""#editModal"">
                                <i class=""fa fa-pencil-square-o""></i>
                            </button>
                        </p>
                    </div>
                    <div class=""swiper-container"">
                        <div class=""swiper-wrapper"">

                            <div class=""swiper-slide""
                                 style=""background-image: url('https://upload.wikimedia.org/wikipedia/zh/7/74/LOTRFOTRmovie.jpg')"">
");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">魔戒首部曲：魔戒現身</p>
                                </a>
                            </div>
                            <div class=""swiper-slide""
                                 style=""background-image: url('https://upload.wikimedia.org/wikipedia/zh/2/2a/LOTRTTTmovie.jpg')"">
");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">魔戒二部曲：雙城奇謀</p>
                                </a>
                            </div>
                            <div class=""swiper-slide""
                                 style=""background-image: url('https://upload.wikimedia.org/wikipedia/zh/e/e3/The_Lord_of_the_Rings_-_The_Return_of_the_King_poster.jpg')"">
");
                WriteLiteral(@"                                <a href=""/vod/3795"">
                                    <p class=""movie-card"">魔戒三部曲：王者再臨</p>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div style=""clear:both;""></div>
                    <!--end content-->
                </div>
            </div>
        </div>
    </div>


    <script>
        const add = document.querySelector(""#buttonAdd"")
        function showModal1(titleHtml, contentHtml, buttons) {
            const modal = document.createElement(""div"");

            modal.classList.add(""modal"");
            modal.innerHTML = `
            <div class=""modal__inner"">
                <div class=""modal__top"">
                    <div class=""modal__title"">${titleHtml}</div>
                    <button class=""modal__close"" type=""button"">
                        <span class=""material-icons""><i class=""fa fa-times"" aria-hidden=""true""></i></span>
");
                WriteLiteral(@"                    </button>
                </div>
                <div class=""modal__content"">${contentHtml}</div>
                <div class=""modal__bottom""></div>
            </div>
        `;

            for (const button of buttons) {
                const element = document.createElement(""button"");
                element.setAttribute(""type"", ""button"");
                element.classList.add(""modal__button"");
                if (button.triggerClose) {
                    element.classList.add(""btn-secondary"");
                }
                else { element.classList.add(""site-btn""); }
                element.textContent = button.label;
                element.addEventListener(""click"", () => {
                    if (button.triggerClose) {
                        document.body.removeChild(modal);
                    }
                });
                modal.querySelector("".modal__bottom"").appendChild(element);
            }

            modal.querySelector("".modal__close"").a");
                WriteLiteral(@"ddEventListener(""click"", () => {
                document.body.removeChild(modal);
            });

            document.body.appendChild(modal);
        }

        const cont1 = `
                <input type=""hidden"" name=""WatchListID"" id=""WatchListID"">
                            <div class=""form-group"">
                                <label for=""WatchListName"" style=""color:black"">我的所有片單</label>
                            </div>
                            <table id=""WatchList"" class=""table table-bordered"">
                                <thead>
                                    <tr>
                                        <th>序</th>
                                        <th>片單</th>
                                        <th>移除</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>1</td>
                                 ");
                WriteLiteral(@"       <td>
                                            <input type=""text"" class=""form-control"" id=""WatchListName"" name=""WatchListName"" value=""MyWatchList-哈利波特"">
                                        </td>
                                        <td><button type=""button"" class=""btn btn-danger btn-sm""><i class=""fas fa-trash-alt""></i></button></td>
                                    </tr>
                                    <tr>
                                        <td>2</td>
                                        <td>
                                            <input type=""text"" class=""form-control"" id=""WatchListName"" name=""WatchListName"" value=""周末片單"">
                                        </td>
                                        <td><button type=""button"" class=""btn btn-danger btn-sm""><i class=""fas fa-trash-alt""></i></button></td>
                                    </tr>
                                    <tr>
                                        <td>3</td>
                   ");
                WriteLiteral(@"                     <td>
                                            <input type=""text"" class=""form-control"" id=""WatchListName"" name=""WatchListName"" value=""魔戒"">
                                        </td>
                                        <td><button type=""button"" class=""btn btn-danger btn-sm""><i class=""fas fa-trash-alt""></i></button></td>
                                    </tr>
                                </tbody>
                            </table>
                            <input type=""text"" class=""form-control"" id=""WatchListName"" name=""WatchListName""
                                   placeholder=""我的片單"">
                            <button type=""button"" id=""buttonAdd"" class=""site-btn btn-sm mt-3"">
                                <i class=""fa fa-plus"">新增</i>
                            </button>
            `

        add.addEventListener('click', () => {
            showModal1(""修改我的片單"", cont1, [
                {
                    label: ""取消"",
                    trig");
                WriteLiteral(@"gerClose: true
                },
                {
                    label: ""確認修改"",
                    triggerClose: false
                }
            ])
        })
    </script>

    <script>
        const edits = document.querySelectorAll("".edit"")
        function showModal2(titleHtml, contentHtml, buttons) {
            const modal = document.createElement(""div"");
            modal.classList.add(""modal"");
            modal.classList.add(""editModal"");
            modal.innerHTML = `
            <div class=""modal__inner"">
                <div class=""modal__top"">
                    <div class=""modal__title"">${titleHtml}</div>
                    <button class=""modal__close"" type=""button"">
                        <span class=""material-icons""><i class=""fa fa-times"" aria-hidden=""true""></i></span>
                    </button>
                </div>
                <div class=""modal__content"">${contentHtml}</div>
                <div class=""modal__bottom""></div>
            </div>");
                WriteLiteral(@"
        `;

            for (const button of buttons) {
                const element = document.createElement(""button"");
                element.setAttribute(""type"", ""button"");

                if (button.triggerClose) {
                    element.classList.add(""btn-secondary"");
                }
                else { element.classList.add(""site-btn""); }
                element.classList.add(""modal__button"");
                element.textContent = button.label;
                element.addEventListener(""click"", () => {
                    if (button.triggerClose) {
                        document.body.removeChild(modal);
                    }
                });
                modal.querySelector("".modal__bottom"").appendChild(element);
            }
            modal.querySelector("".modal__close"").addEventListener(""click"", () => {
                document.body.removeChild(modal);
            });
            document.body.appendChild(modal);
        }

        const cont2 = `
   ");
                WriteLiteral(@"             <form id = ""editForm"">
                    <input type=""hidden"" name=""WatchListID"" id=""WatchListID"">
                        <div class=""form-group"">
                            <label for=""WatchListName"" style=""color:black"">片單名稱</label>
                            <input type=""text"" class=""form-control"" id=""WatchListName"" name=""WatchListName""
                                value=""周末片單"">
                            </div>
                            <table id=""WatchList"" class=""table table-bordered"">
                                <thead>
                                    <tr>
                                        <th>序</th>
                                        <th>片名</th>
                                        <th>移除</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>1</td>
                                   ");
                WriteLiteral(@"     <td>子彈列車</td>
                                        <td><button type=""button"" class=""btn btn-danger btn-sm""><i class=""fas fa-trash-alt""></i></button></td>
                                    </tr>
                                    <tr>
                                        <td>2</td>
                                        <td>捍衛戰士：獨行俠</td>
                                        <td><button type=""button"" class=""btn btn-danger btn-sm""><i class=""fas fa-trash-alt""></i></button></td>
                                    </tr>
                                </tbody>
                            </table>
                            <input type=""text"" class=""form-control"" id=""WatchListName"" name=""WatchListName""
                                placeholder=""搜尋"">
                                <button type=""button"" id=""buttonAdd"" class=""site-btn btn-sm mt-3"">
                                    <i class=""fa fa-plus"">新增</i>
                                </button>
                        </fo");
                WriteLiteral(@"rm>
            `

        edits.forEach(btn => btn.addEventListener('click', () => {
            showModal2(""修改我的片單"", cont2, [
                {
                    label: ""取消"",
                    triggerClose: true
                },
                {
                    label: ""確定修改"",
                    triggerClose: false
                }
            ])
        }))
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<script src=\'https://kit.fontawesome.com/a076d05399.js\' crossorigin=\'anonymous\'></script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
